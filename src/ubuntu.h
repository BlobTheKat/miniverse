#pragma once
#include "util/defs.cpp"

typedef const struct{
	f32 advance;
	vec4 pos, uv;
} Glyph;

Glyph glyphs[] = {
	{.24},
	{.286,{.018,-.052083333,.268,.73958333},{.9296875,.7203125,.9671875,.8390625}},
	{.465,{.01375,.42708333,.45125,.80208333},{.9296875,.6484375,.9953125,.7046875}},
	{.699,{.016166667,-.03125,.68283333,.73958333},{.7328125,.4640625,.8328125,.5796875}},
	{.568,{-.00225,-.15625,.56025,.82291667},{.7390625,.8515625,.8234375,.9984375}},
	{.918,{.00066666667,-.052083333,.91733333,.76041667},{.5046875,.7171875,.6421875,.8390625}},
	{.705,{.00041666667,-.052083333,.72958333,.76041667},{.6453125,.7171875,.7546875,.8390625}},
	{.247,{.0089166667,.42708333,.23808333,.80208333},{.9453125,.1296875,.9796875,.1859375}},
	{.356,{.033416667,-.21875,.38758333,.82291667},{.0015625,.8421875,.0546875,.9984375}},
	{.356,{-.031583333,-.21875,.32258333,.82291667},{.0578125,.8421875,.1109375,.9984375}},
	{.502,{.001,.26041667,.501,.73958333},{.5203125,.0515625,.5953125,.1234375}},
	{.568,{.013166667,.010416667,.55483333,.59375},{.3421875,.0359375,.4234375,.1234375}},
	{.246,{-.019916667,-.19791667,.25091667,.19791667},{.9296875,.5859375,.9703125,.6453125}},
	{.34,{-.0070833333,.19791667,.34708333,.40625},{.9453125,.1890625,.9984375,.2203125}},
	{.246,{-.002,-.052083333,.248,.21875},{.8265625,.0828125,.8640625,.1234375}},
	{.437,{-.06275,-.21875,.49975,.82291667},{.2734375,.8421875,.3578125,.9984375}},
	{.568,{.00275,-.052083333,.56525,.76041667},{.7578125,.7171875,.8421875,.8390625}},
	{.568,{.038583333,-.03125,.43441667,.73958333},{.0859375,.2234375,.1453125,.3390625}},
	{.568,{-.00525,-.03125,.55725,.76041667},{.8421875,.5859375,.9265625,.7046875}},
	{.568,{-.0053333333,-.052083333,.53633333,.76041667},{.8453125,.7171875,.9265625,.8390625}},
	{.568,{-.012166667,-.03125,.57116667,.73958333},{.1484375,.2234375,.2359375,.3390625}},
	{.568,{.0026666667,-.052083333,.54433333,.73958333},{.0015625,.4609375,.0828125,.5796875}},
	{.568,{.00375,-.052083333,.56625,.73958333},{.0859375,.4609375,.1703125,.5796875}},
	{.568,{.00425,-.03125,.56675,.73958333},{.7015625,.2234375,.7859375,.3390625}},
	{.568,{.00325,-.052083333,.56575,.76041667},{.0859375,.5828125,.1703125,.7046875}},
	{.568,{-.00475,-.052083333,.55775,.76041667},{.1734375,.5828125,.2578125,.7046875}},
	{.246,{-.002,-.052083333,.248,.57291667},{.0015625,.1265625,.0390625,.2203125}},
	{.246,{-.018916667,-.19791667,.25191667,.57291667},{.8765625,.2234375,.9171875,.3390625}},
	{.568,{.013666667,.010416667,.55533333,.59375},{.1734375,.0359375,.2546875,.1234375}},
	{.568,{.013166667,.09375,.55483333,.51041667},{.5984375,.0609375,.6796875,.1234375}},
	{.568,{.012666667,.010416667,.55433333,.59375},{.2578125,.0359375,.3390625,.1234375}},
	{.455,{-.014583333,-.052083333,.46458333,.76041667},{.2609375,.5828125,.3328125,.7046875}},
	{.974,{.01825,-.19791667,.95575,.76041667},{.8265625,.8546875,.9671875,.9984375}},
	{.721,{-.024916667,-.03125,.74591667,.73958333},{.3515625,.2234375,.4671875,.3390625}},
	{.672,{.041,-.052083333,.666,.73958333},{.3484375,.4609375,.4421875,.5796875}},
	{.648,{.016083333,-.052083333,.66191667,.76041667},{.3359375,.5828125,.4328125,.7046875}},
	{.737,{.03975,-.052083333,.72725,.73958333},{.5453125,.4609375,.6484375,.5796875}},
	{.606,{.04425,-.03125,.60675,.73958333},{.7890625,.2234375,.8734375,.3390625}},
	{.574,{.041166667,-.03125,.58283333,.73958333},{.0015625,.2234375,.0828125,.3390625}},
	{.702,{.010166667,-.052083333,.67683333,.76041667},{.4359375,.5828125,.5359375,.7046875}},
	{.734,{.044083333,-.03125,.68991667,.73958333},{.6546875,.3421875,.7515625,.4578125}},
	{.316,{.043416667,-.03125,.27258333,.73958333},{.6171875,.3421875,.6515625,.4578125}},
	{.529,{-.025916667,-.052083333,.49491667,.73958333},{.6515625,.4609375,.7296875,.5796875}},
	{.684,{.043666667,-.03125,.71033333,.73958333},{.4140625,.3421875,.5140625,.4578125}},
	{.563,{.040666667,-.03125,.58233333,.73958333},{.3296875,.3421875,.4109375,.4578125}},
	{.897,{.021416667,-.03125,.87558333,.73958333},{.1984375,.3421875,.3265625,.4578125}},
	{.756,{.044666667,-.03125,.71133333,.73958333},{.0953125,.3421875,.1953125,.4578125}},
	{.79,{.0095833333,-.052083333,.78041667,.76041667},{.5390625,.5828125,.6546875,.7046875}},
	{.644,{.042416667,-.03125,.64658333,.73958333},{.0015625,.3421875,.0921875,.4578125}},
	{.79,{.0095833333,-.23958333,.78041667,.76041667},{.6203125,.8484375,.7359375,.9984375}},
	{.667,{.040583333,-.03125,.68641667,.73958333},{.5171875,.3421875,.6140625,.4578125}},
	{.582,{-.0021666667,-.052083333,.58116667,.76041667},{.6578125,.5828125,.7453125,.7046875}},
	{.614,{-.015916667,-.03125,.62991667,.73958333},{.9015625,.4640625,.9984375,.5796875}},
	{.707,{.030583333,-.052083333,.67641667,.73958333},{.4453125,.4609375,.5421875,.5796875}},
	{.722,{-.024416667,-.03125,.74641667,.73958333},{.5828125,.2234375,.6984375,.3390625}},
	{.948,{-.015583333,-.03125,.96358333,.73958333},{.8515625,.3421875,.9984375,.4578125}},
	{.675,{-.027083333,-.03125,.70208333,.73958333},{.4703125,.2234375,.5796875,.3390625}},
	{.661,{-.034083333,-.03125,.69508333,.73958333},{.2390625,.2234375,.3484375,.3390625}},
	{.61,{-.005,-.03125,.62,.73958333},{.7546875,.3421875,.8484375,.4578125}},
	{.371,{.048416667,-.21875,.40258333,.82291667},{.3609375,.8421875,.4140625,.9984375}},
	{.437,{-.06275,-.21875,.49975,.82291667},{.4171875,.8421875,.5015625,.9984375}},
	{.371,{-.031583333,-.21875,.32258333,.82291667},{.5046875,.8421875,.5578125,.9984375}},
	{.568,{-.018083333,.23958333,.58608333,.73958333},{.4265625,.0484375,.5171875,.1234375}},
	{.5,{-.03125,-.21875,.53125,-.010416667},{.8671875,.0921875,.9515625,.1234375}},
	{.286,{-.01975,.53125,.29275,.84375},{.6828125,.0765625,.7296875,.1234375}},
	{.553,{.0010833333,-.052083333,.52191667,.57291667},{.3671875,.1265625,.4453125,.2203125}},
	{.604,{.03325,-.052083333,.59575,.82291667},{.0015625,.7078125,.0859375,.8390625}},
	{.5,{.0075,-.052083333,.5075,.57291667},{.0421875,.1265625,.1171875,.2203125}},
	{.604,{.00825,-.052083333,.57075,.82291667},{.0890625,.7078125,.1734375,.8390625}},
	{.584,{.01075,-.052083333,.57325,.57291667},{.4484375,.1265625,.5328125,.2203125}},
	{.422,{.03075,-.03125,.46825,.82291667},{.2265625,.7109375,.2921875,.8390625}},
	{.594,{.013666667,-.23958333,.55533333,.57291667},{.0015625,.5828125,.0828125,.7046875}},
	{.589,{.036583333,-.03125,.55741667,.82291667},{.2953125,.7109375,.3734375,.8390625}},
	{.289,{.019,-.03125,.269,.80208333},{.4640625,.7140625,.5015625,.8390625}},
	{.289,{-.107,-.21875,.268,.80208333},{.5609375,.8453125,.6171875,.9984375}},
	{.579,{.03825,-.03125,.60075,.82291667},{.3765625,.7109375,.4609375,.8390625}},
	{.316,{.02925,-.052083333,.34175,.82291667},{.1765625,.7078125,.2234375,.8390625}},
	{.862,{.037666667,-.03125,.82933333,.57291667},{.8234375,.1296875,.9421875,.2203125}},
	{.589,{.036583333,-.03125,.55741667,.57291667},{.9203125,.2484375,.9984375,.3390625}},
	{.607,{.011833333,-.052083333,.59516667,.57291667},{.2765625,.1265625,.3640625,.2203125}},
	{.604,{.03325,-.21875,.59575,.57291667},{.1734375,.4609375,.2578125,.5796875}},
	{.604,{.00825,-.21875,.57075,.57291667},{.2609375,.4609375,.3453125,.5796875}},
	{.422,{.032666667,-.03125,.44933333,.57291667},{.7578125,.1296875,.8203125,.2203125}},
	{.485,{.0019166667,-.052083333,.48108333,.57291667},{.1203125,.1265625,.1921875,.2203125}},
	{.444,{.031166667,-.052083333,.44783333,.71875},{.8359375,.4640625,.8984375,.5796875}},
	{.589,{.031583333,-.052083333,.55241667,.57291667},{.1953125,.1265625,.2734375,.2203125}},
	{.55,{-.027083333,-.03125,.57708333,.57291667},{.0015625,.0328125,.0921875,.1234375}},
	{.784,{-.024666667,-.03125,.80866667,.57291667},{.6296875,.1296875,.7546875,.2203125}},
	{.554,{-.025083333,-.03125,.57908333,.57291667},{.5359375,.1296875,.6265625,.2203125}},
	{.547,{-.031083333,-.21875,.57308333,.57291667},{.7484375,.5859375,.8390625,.7046875}},
	{.5,{.0025,-.03125,.5025,.57291667},{.0953125,.0328125,.1703125,.1234375}},
	{.371,{.000083333333,-.21875,.39591667,.82291667},{.2109375,.8421875,.2703125,.9984375}},
	{.322,{.056833333,-.21875,.26516667,.82291667},{.1765625,.8421875,.2078125,.9984375}},
	{.371,{-.024916667,-.21875,.37091667,.82291667},{.1140625,.8421875,.1734375,.9984375}},
	{.568,{-.018083333,.15625,.58608333,.44791667},{.7328125,.0796875,.8234375,.1234375}}
};

Glyph invalid = {0};
const f32 dist_range = 1/6.;

inline Glyph& get_glyph(char c){
	c -= 32;
	if(((unsigned char)c)>94) return invalid;
	return glyphs[c];
}

f32 measure(string& text){
	f32 x = 0;
	for(char c : text){
		c -= 32;
		if(((unsigned char)c)<95) x += glyphs[c].advance;
	}
	return x;
}